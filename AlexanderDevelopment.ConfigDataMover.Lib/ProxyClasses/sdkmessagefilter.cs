// <auto-generated />

using System;
using System.Linq;
using System.Collections.Generic;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Query;
using Microsoft.Crm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Metadata;
using Microsoft.Xrm.Sdk.Client;
using System.Threading.Tasks;
using System.ComponentModel;

namespace AlexanderDevelopment.ConfigDataMover.Lib.ProxyClasses
{
    [EntityLogicalNameAttribute("sdkmessagefilter")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XrmToolkit", "4.0")]
    public partial class sdkmessagefilter : BaseProxyClass
    {
        public new const string LogicalName = "sdkmessagefilter";
        public const int ObjectTypeCode = 4607;
        public const string PrimaryIdAttribute = "sdkmessagefilterid";
        public const string PrimaryNameAttribute = "";
        
        static sdkmessagefilter()
        {
            BaseProxyClass.RegisterProxyType(typeof(sdkmessagefilter), "sdkmessagefilter");
            _textOptions = new Dictionary<string, eTextOptions>();
            _numberOptions = new Dictionary<string, eNumberOptions>();
            _errorStrings = new Dictionary<string, string>();
            TextError = "The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.";
            NumberError = "The value for attribute '{0}' must be between {2} and {3}. The value is {1}";
        }
        public sdkmessagefilter() : base(new Entity("sdkmessagefilter")) { }
        public sdkmessagefilter(Entity original) : base(original) { }
        public static string GetLogicalName() { return BaseProxyClass.GetLogicalName<sdkmessagefilter>(); }
        /// <summary>
        /// Action to perform when the string value is greater than the allowed length.
        /// <para>This is the default for any string attribute in this Entity</para>
        /// </summary>
        public static eTextOptions TextOptions { get; set; }
        private static Dictionary<string, eTextOptions> _textOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater than the allowed length
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater than the allowed length</param>
        /// <param name="errorString">Optional: Error to throw if the eTextOptions == ThrowError
        /// <para>If nothing is specified then the 'TextError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </param>
        public static void SetTextOptions(string logicalName, eTextOptions options, string errorString = null)
        {
            if (_textOptions.ContainsKey(logicalName)) { _textOptions[logicalName] = options; }
            else { _textOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eTextOptions GetTextOptions(string logicalName)
        {
            if (_textOptions.ContainsKey(logicalName)) { return _textOptions[logicalName]; }
            return TextOptions;
        }
        /// <summary>
        /// Action to perform when the number value is greater or less than the allowed value.
        /// <para>This is the default for any int, decimal, double, or money attribute in this Entity</para>
        /// </summary>
        public static eNumberOptions NumberOptions { get; set; }
        private static Dictionary<string, eNumberOptions> _numberOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater or less than the allowed value
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater or less than the allowed value</param>
        /// <param name="errorString">Optional: Error to throw if the eNumberOptions == ThrowError
        /// <para>If nothing is specified then the 'NumberError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </param>
        public static void SetNumberOptions(string logicalName, eNumberOptions options, string errorString = null)
        {
            if (_numberOptions.ContainsKey(logicalName)) { _numberOptions[logicalName] = options; }
            else { _numberOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eNumberOptions GetNumberOptions(string logicalName)
        {
            if (_numberOptions.ContainsKey(logicalName)) { return _numberOptions[logicalName]; }
            return NumberOptions;
        }
        private static Dictionary<string, string> _errorStrings;
        protected override string GetErrorString(string attributeName, BaseProxyClass.eErrorType defaultErrorType)
        {
            if (_errorStrings.ContainsKey(attributeName))
            {
                return _errorStrings[attributeName];
            }
            return defaultErrorType == BaseProxyClass.eErrorType.Text ? TextError : NumberError;
        }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </summary>
        public static string TextError { get; set; }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' must be between {2} and {3}. The value is {1}.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </summary>
        public static string NumberError { get; set; }

        ///<summary>
///<para>Logical Name: createdonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
public string createdonbehalfbyyominame
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: isvisible</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("isvisible")]
public bool? isvisible
{
	get { return this.GetPropertyValue<bool?>("isvisible"); }
}
///<summary>
///<para>Logical Name: sdkmessagefilteridunique</para>
///</summary>
[AttributeLogicalNameAttribute("sdkmessagefilteridunique")]
public Guid sdkmessagefilteridunique
{
	get { return this.GetPropertyValue<Guid>("sdkmessagefilteridunique"); }
}
///<summary>
///<para>Logical Name: organizationid</para>
///</summary>
[AttributeLogicalNameAttribute("organizationid")]
public EntityReference organizationid
{
	get { return this.GetPropertyValue<EntityReference>("organizationid"); }
}
///<summary>
///<para>Logical Name: customizationlevel</para>
///<para>Minimum Value: -255</para>
///<para>Maximum Value: 255</para>
///</summary>
[AttributeLogicalNameAttribute("customizationlevel")]
public int? customizationlevel
{
	get { return this.GetPropertyValue<int?>("customizationlevel"); }
}
///<summary>
///<para>Logical Name: modifiedbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyname")]
public string modifiedbyname
{
	get { return this.GetPropertyValue<string>("modifiedbyname"); }
}
///<summary>
///<para>Logical Name: versionnumber</para>
///</summary>
[AttributeLogicalNameAttribute("versionnumber")]
public int? versionnumber
{
	get { return this.GetPropertyValue<int?>("versionnumber"); }
}
///<summary>
///<para>Logical Name: sdkmessageidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("sdkmessageidname")]
public string sdkmessageidname
{
	get { return this.GetPropertyValue<string>("sdkmessageidname"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
public string modifiedonbehalfbyyominame
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: createdbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyname")]
public string createdbyname
{
	get { return this.GetPropertyValue<string>("createdbyname"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
public string modifiedonbehalfbyname
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyname"); }
}
///<summary>
///<para>Key Property (Uniqueidentifier)</para>
///<para>Logical Name: sdkmessagefilterid</para>
///</summary>
[AttributeLogicalNameAttribute("sdkmessagefilterid")]
public Guid sdkmessagefilterid
{
	get
	{
		return this.Id;
	}
	set
	{
		this.Id = value;
	}
}
///<summary>
///<para>Logical Name: createdonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyname")]
public string createdonbehalfbyname
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: availability</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("availability")]
public int? availability
{
	get { return this.GetPropertyValue<int?>("availability"); }
	set { this.SetPropertyValue("availability", (int?)value, (int)-2147483648, (int)2147483647, "availability"); }
}
///<summary>
///<para>Logical Name: createdby</para>
///</summary>
[AttributeLogicalNameAttribute("createdby")]
public EntityReference createdby
{
	get { return this.GetPropertyValue<EntityReference>("createdby"); }
}
///<summary>
///<para>Logical Name: createdonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfby")]
public EntityReference createdonbehalfby
{
	get { return this.GetPropertyValue<EntityReference>("createdonbehalfby"); }
}
///<summary>
///<para>Logical Name: createdon</para>
///</summary>
[AttributeLogicalNameAttribute("createdon")]
public DateTime? createdon
{
	get { return this.GetPropertyValue<DateTime?>("createdon"); }
}
///<summary>
///<para>Logical Name: iscustomprocessingstepallowed</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("iscustomprocessingstepallowed")]
public bool? iscustomprocessingstepallowed
{
	get { return this.GetPropertyValue<bool?>("iscustomprocessingstepallowed"); }
	set { this.SetPropertyValue<bool?>("iscustomprocessingstepallowed", value, "iscustomprocessingstepallowed"); }
}
///<summary>
///<para>Logical Name: modifiedby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedby")]
public EntityReference modifiedby
{
	get { return this.GetPropertyValue<EntityReference>("modifiedby"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfby")]
public EntityReference modifiedonbehalfby
{
	get { return this.GetPropertyValue<EntityReference>("modifiedonbehalfby"); }
}
///<summary>
///<para>Logical Name: modifiedon</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedon")]
public DateTime? modifiedon
{
	get { return this.GetPropertyValue<DateTime?>("modifiedon"); }
}
///<summary>
///<para>Logical Name: primaryobjecttypecode</para>
///</summary>
[AttributeLogicalNameAttribute("primaryobjecttypecode")]
public string primaryobjecttypecode
{
	get { return this.GetPropertyValue<string>("primaryobjecttypecode"); }
}
///<summary>
///<para>Logical Name: sdkmessageid</para>
///</summary>
[AttributeLogicalNameAttribute("sdkmessageid")]
public EntityReference sdkmessageid
{
	get { return this.GetPropertyValue<EntityReference>("sdkmessageid"); }
	set { this.SetPropertyValue<EntityReference>("sdkmessageid", value, "sdkmessageid"); }
}
///<summary>
///<para>Logical Name: secondaryobjecttypecode</para>
///</summary>
[AttributeLogicalNameAttribute("secondaryobjecttypecode")]
public string secondaryobjecttypecode
{
	get { return this.GetPropertyValue<string>("secondaryobjecttypecode"); }
}
///<summary>
///<para>Logical Name: workflowsdkstepenabled</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("workflowsdkstepenabled")]
public bool? workflowsdkstepenabled
{
	get { return this.GetPropertyValue<bool?>("workflowsdkstepenabled"); }
}


        /// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: sdkmessagefilterid_sdkmessageprocessingstep</para>
/// </summary>
public List<Entity> sdkmessagefilterid_sdkmessageprocessingstep (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "sdkmessageprocessingstep", "sdkmessagefilterid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: sdkmessagefilterid_sdkmessageprocessingstep</para>
/// </summary>
public List<Entity> sdkmessagefilterid_sdkmessageprocessingstep (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "sdkmessageprocessingstep", "sdkmessagefilterid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: userentityinstancedata_sdkmessagefilter</para>
/// </summary>
public List<Entity> userentityinstancedata_sdkmessagefilter (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "userentityinstancedata", "objectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: userentityinstancedata_sdkmessagefilter</para>
/// </summary>
public List<Entity> userentityinstancedata_sdkmessagefilter (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "userentityinstancedata", "objectid", Columns); }


        

        

        

        public static class Properties
{
	/// <summary><para>createdonbehalfbyyominame</para>
	/// <para>createdonbehalfbyyominame</para></summary>
	public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
	/// <summary><para>isvisible</para>
	/// <para>isvisible</para></summary>
	public const string isvisible = "isvisible";
	/// <summary><para>sdkmessagefilteridunique</para>
	/// <para>sdkmessagefilteridunique</para></summary>
	public const string sdkmessagefilteridunique = "sdkmessagefilteridunique";
	/// <summary><para>organizationid</para>
	/// <para>organizationid</para></summary>
	public const string organizationid = "organizationid";
	/// <summary><para>customizationlevel</para>
	/// <para>customizationlevel</para></summary>
	public const string customizationlevel = "customizationlevel";
	/// <summary><para>modifiedbyname</para>
	/// <para>modifiedbyname</para></summary>
	public const string modifiedbyname = "modifiedbyname";
	/// <summary><para>versionnumber</para>
	/// <para>versionnumber</para></summary>
	public const string versionnumber = "versionnumber";
	/// <summary><para>sdkmessageidname</para>
	/// <para>sdkmessageidname</para></summary>
	public const string sdkmessageidname = "sdkmessageidname";
	/// <summary><para>modifiedonbehalfbyyominame</para>
	/// <para>modifiedonbehalfbyyominame</para></summary>
	public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
	/// <summary><para>createdbyname</para>
	/// <para>createdbyname</para></summary>
	public const string createdbyname = "createdbyname";
	/// <summary><para>modifiedonbehalfbyname</para>
	/// <para>modifiedonbehalfbyname</para></summary>
	public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
	/// <summary><para>sdkmessagefilterid</para>
	/// <para>sdkmessagefilterid</para></summary>
	public const string sdkmessagefilterid = "sdkmessagefilterid";
	/// <summary><para>createdonbehalfbyname</para>
	/// <para>createdonbehalfbyname</para></summary>
	public const string createdonbehalfbyname = "createdonbehalfbyname";
	/// <summary><para>Availability</para>
	/// <para>availability</para></summary>
	public const string availability = "availability";
	/// <summary><para>Created By</para>
	/// <para>createdby</para></summary>
	public const string createdby = "createdby";
	/// <summary><para>Created By (Delegate)</para>
	/// <para>createdonbehalfby</para></summary>
	public const string createdonbehalfby = "createdonbehalfby";
	/// <summary><para>Created On</para>
	/// <para>createdon</para></summary>
	public const string createdon = "createdon";
	/// <summary><para>Custom Processing Step Allowed</para>
	/// <para>iscustomprocessingstepallowed</para></summary>
	public const string iscustomprocessingstepallowed = "iscustomprocessingstepallowed";
	/// <summary><para>Modified By</para>
	/// <para>modifiedby</para></summary>
	public const string modifiedby = "modifiedby";
	/// <summary><para>Modified By (Delegate)</para>
	/// <para>modifiedonbehalfby</para></summary>
	public const string modifiedonbehalfby = "modifiedonbehalfby";
	/// <summary><para>Modified On</para>
	/// <para>modifiedon</para></summary>
	public const string modifiedon = "modifiedon";
	/// <summary><para>Primary Object Type Code</para>
	/// <para>primaryobjecttypecode</para></summary>
	public const string primaryobjecttypecode = "primaryobjecttypecode";
	/// <summary><para>SDK Message ID</para>
	/// <para>sdkmessageid</para></summary>
	public const string sdkmessageid = "sdkmessageid";
	/// <summary><para>Secondary Object Type Code</para>
	/// <para>secondaryobjecttypecode</para></summary>
	public const string secondaryobjecttypecode = "secondaryobjecttypecode";
	/// <summary><para>WorkflowSdkStepEnabled</para>
	/// <para>workflowsdkstepenabled</para></summary>
	public const string workflowsdkstepenabled = "workflowsdkstepenabled";
}

    }
}
